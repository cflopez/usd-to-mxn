########################## General properties ###############################

#This is the number of decimal places to round a rate value
app.roundDecimals=4

#The default message for an unexpected error
app.unexpectedError=Unexpected error.

#This are the identifiers for every provider. It is used as the key at the JSON result
#for every rate result object and as prefix when building an error message
app.provider1=provider_1
app.provider2=provider_2
app.provider3=provider_3


########################## First Site properties : Banxico ########################

#This is the url (endpoint) to the first site without API to scrape the information from
app.urlBanxico=https://www.banxico.org.mx/tipcamb/tipCamMIAction.do

#This is the css selector to select a table from the parentNode with Jsoup to scrape the first site
app.columnNamesSelectorBanxico=form[name="tipCambMIActionForm"] .renglonTituloColumnas

#These are the column Names to look for inside the Jsoup Elements collection
#Note how the "small latin o with acute" is escaped with unicode
app.columnNamesBanxico=Fecha,FIX,Publicaci\u00f3n DOF,Para pagos

#These are the indexes in the Elements collection where the column names are expected in the same order as the previous property
app.nameIndexesBanxico=4,5,7,9

#These are the indexes for the values that corresponds to the column Names in the Elements collection expected in the same order
#First one is expected to be the last (current) date, and the next 3 the 1 USD to MXN value for each column Name
app.valueIndexesBanxico=12,13,14,15

#The date value format expected in the Elements collection. The regex used to validate this property is not perfect
#but should be enough as a start: ((yyyy)|(MM)|(dd))[\/-]((MM)|(dd))[\/-]((yyyy)|(dd))
app.dateFormatBanxico=dd/MM/yyyy

#These are the values for the keys at the JSON response for all first site "provider_variants" source
app.variantsJsonBanxico=provider_1_variant_1,provider_1_variant_2,provider_1_variant_3




######################## Second site properties : Fix.io #########################

#This is the url (endpoint) to the second site
app.urlFixIo=https://data.fixer.io/api/latest

#The accessKey provided when you sign on for the service, without it would be impossible
app.accessKeyFixIo=

#The type for the plan you sign on. The default is "FREE", any other would be treated as "BASIC" or greater.
#This is required because if you provide an accessKey for a FREE plan, you are not allowed to use "USD" as base currency,
#and that is what it is required to fulfill successfully the desired request. If an accessKey for a FREE plan is specified
#then this app would use a "fallback strategy" using "EUR" as base currency and doing the conversion from EUR to USD to MXN,
#validated at https://www.bloomberg.com/
#For this latter case the url prefix protocol would also be changed from https to http.
#It is preferred to specify this access type property to avoid doing 2 requests just to know from the first one that the
#accessKey is not allowed because of the access Plan.
#It is also worth noting that when the using the latter strategy, a warning would be attached on the final json response
#(more information on the README.md)
app.accessTypeFixIo=FREE




##################### Third site properties : Banxico SieAPIRest #################

#The full URI for the API request method. {idSeries} is the path parameter for the idSeries to be requested
app.urlSieApi=https://www.banxico.org.mx/SieAPIRest/service/v1/series/{idSeries}/datos/oportuno

#The string containing the valid path parameter value for {idSeries}.
#The API supports more than one if they are separated by comma.
#Each one corresponds to a valid USD to MXN rate value conversion.
#Each one is going to generate a different result object with its
#associated description at the "source" field.
app.seriesSieApi=SF60653,SF43718,SF43787,SF43784,SF43785,SF43717

#The token generated at https://www.banxico.org.mx/SieAPIRest/service/v1/token
app.tokenSieApi=

#These are the values for the keys at the JSON response for all third site "provider_variants" source
#It should match the length of elements (as well divided by comma) at app.seriesSieApi
app.variantsJsonSieApi=provider_3_variant_1,provider_3_variant_2,provider_3_variant_3,provider_3_variant_4,provider_3_variant_5,provider_3_variant_6

